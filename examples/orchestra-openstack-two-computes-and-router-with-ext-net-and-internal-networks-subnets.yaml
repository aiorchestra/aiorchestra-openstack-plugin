tosca_definitions_version: tosca_simple_yaml_1_0

description: Router with Ext net and two internal networks


#####################################################################
# Imports
#####################################################################

imports:

  - https://raw.githubusercontent.com/aiorchestra/aiorchestra-openstack-plugin/0.1.2-stable/types.yaml


topology_template:
#####################################################################
# Inputs
#####################################################################

  inputs:

    keystone_username:
      type: string

    keystone_password:
      type: string

    keystone_project_name:
      type: string

    keystone_url:
      type: string

    openstack_region:
      type: string

    # compute

    compute_name_one:
      type: string
      default: 'compute-vm-1'

    compute_name_two:
      type: string
      default: 'compute-vm-2'

    compute_image:
      type: string
      default: '6c3047c6-17b1-4aaf-a657-9229bb481e50'

    compute_flavor:
      type: string
      default: '196235bc-7ca5-4085-ac81-7e0242bda3f9'

    # network

    ext_net_name:
      type: string

    network_name_one:
      type: string

    network_name_two:
      type: string

    # subnet

    subnet_name_one:
      type: string

    subnet_name_two:
      type: string

    subnet_ip_version:
      type: int

    subnet_cidr_one:
      type: string

    subnet_cidr_two:
      type: string

    subnet_pools_one:
      type: list

    subnet_pools_two:
      type: list

    subnet_dns_nameservers:
      type: list

    # router

    router_name:
      type: string

    # ports

    subnet_port_one:
      type: string

    subnet_port_two:
      type: string

#####################################################################
# Node templates
#####################################################################

  node_templates:

    auth:
      type: tosca.openstack.authorization_form
      properties:
        username: { get_input: keystone_username }
        password: { get_input: keystone_password }
        project_name:  { get_input: keystone_project_name }
        auth_url:  { get_input: keystone_url }
        region_name:  { get_input: openstack_region }

    orchestra_external_network:
      type: tosca.openstack.network
      properties:
        use_existing: true
        name_or_id: { get_input: ext_net_name }
        is_external: true
      requirements:
        - authorization_form: auth

    orchestra_router:
      type: tosca.openstack.router
      properties:
        name_or_id: { get_input: router_name }
      requirements:
        - authorization_form: auth
        - external_network: orchestra_external_network

    orchestra_network_one:
      type: tosca.openstack.network
      properties:
        name_or_id: { get_input: network_name_one }
      requirements:
        - authorization_form: auth

    orchestra_network_two:
      type: tosca.openstack.network
      properties:
        name_or_id: { get_input: network_name_two }
      requirements:
        - authorization_form: auth

    orchestra_network_subnet_one:
      type: tosca.openstack.subnet
      properties:
        name_or_id: { get_input: subnet_name_one }
        ip_version: { get_input: subnet_ip_version }
        cidr: { get_input: subnet_cidr_one }
        allocation_pools: { get_input: subnet_pools_one }
        dns_nameservers: { get_input: subnet_dns_nameservers }
      requirements:
        - authorization_form: auth
        - network: orchestra_network_one
        - router: orchestra_router

    orchestra_network_subnet_two:
      type: tosca.openstack.subnet
      properties:
        name_or_id: { get_input: subnet_name_two }
        ip_version: { get_input: subnet_ip_version }
        cidr: { get_input: subnet_cidr_two }
        allocation_pools: { get_input: subnet_pools_two }
        dns_nameservers: { get_input: subnet_dns_nameservers }
      requirements:
        - authorization_form: auth
        - network: orchestra_network_two
        - router: orchestra_router

    orchestra_subnet_port_one:
      type: tosca.openstack.subnet_port
      properties:
        name_or_id:  { get_input: subnet_port_one }
      requirements:
        - authorization_form: auth
        - subnet: orchestra_network_subnet_one

    orchestra_subnet_port_two:
      type: tosca.openstack.subnet_port
      properties:
        name_or_id:  { get_input: subnet_port_two }
      requirements:
        - authorization_form: auth
        - subnet: orchestra_network_subnet_two

    orchestra_compute_one:
      type: tosca.openstack.compute_instance
      properties:
        name_or_id: { get_input: compute_name_one }
        image: { get_input: compute_image }
        flavor: { get_input: compute_flavor }
      requirements:
        - authorization_form: auth
        - port_1:
            node: orchestra_subnet_port_one
            relationship: tosca.openstack.compute.connect_port_to_compute

    orchestra_compute_two:
      type: tosca.openstack.compute_instance
      properties:
        name_or_id: { get_input: compute_name_two }
        image: { get_input: compute_image }
        flavor: { get_input: compute_flavor }
      requirements:
        - authorization_form: auth
        - port_2:
            node: orchestra_subnet_port_two
            relationship: tosca.openstack.compute.connect_port_to_compute


  outputs:
    auth_token:
      value: { get_attribute: [auth, auth_token] }
    router_id:
      value: { get_attribute: [orchestra_router, id] }
    network_one_id:
      value: { get_attribute: [orchestra_network_one, id] }
    subnet_one_id:
      value: { get_attribute: [orchestra_network_subnet_one, id] }
    network_two_id:
      value: { get_attribute: [orchestra_network_two, id] }
    subnet_two_id:
      value: { get_attribute: [orchestra_network_subnet_two, id] }
