tosca_definitions_version: tosca_simple_yaml_1_0

description: Attempts to authorize to OpenStack


#####################################################################
# Imports
#####################################################################

imports:

  - https://raw.githubusercontent.com/aiorchestra/aiorchestra-openstack-plugin/0.1.2-stable/types.yaml

topology_template:
#####################################################################
# Inputs
#####################################################################

  inputs:

    keystone_username:
      type: string
      default: ''

    keystone_password:
      type: string
      default: ''

    keystone_project_name:
      type: string
      default: ''

    keystone_url:
      type: string
      default: ''

    openstack_region:
      type: string
      default: ''

    compute_keypair_name:
      type: string

    compute_name:
      type: string
      default: 'compute-vm'

    compute_image:
      type: string
      default: '6c3047c6-17b1-4aaf-a657-9229bb481e50'

    compute_flavor:
      type: string
      default: '196235bc-7ca5-4085-ac81-7e0242bda3f9'

#####################################################################
# Node templates
#####################################################################

  node_templates:

    authorization_form:
      type: tosca.openstack.authorization_form
      properties:
        username: { get_input: keystone_username }
        password: { get_input: keystone_password }
        project_name:  { get_input: keystone_project_name }
        auth_url:  { get_input: keystone_url }
        region_name:  { get_input: openstack_region }

    orchestra_keypair:
      type: tosca.openstack.access_and_security.ssh_keypair
      properties:
        name: { get_input: compute_keypair_name }
      requirements:
        - authorization_form: authorization_form

    orchestra_compute:
      type: tosca.openstack.compute_instance
      properties:
        name_or_id: { get_input: compute_name }
        image: { get_input: compute_image }
        flavor: { get_input: compute_flavor }
      requirements:
        - authorization_form: authorization_form
        - ssh_keypair: orchestra_keypair

  outputs:
    auth_token:
      value: { get_attribute: [authorization_form, auth_token ] }
    ssh_pub:
      value: { get_attribute: [orchestra_keypair, public_key] }
    ssh_priv:
      value: { get_attribute: [orchestra_keypair, private_key_content] }
    server:
      value: { get_attribute: [orchestra_compute, server] }
