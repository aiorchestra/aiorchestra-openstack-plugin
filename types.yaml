tosca_definitions_version: tosca_simple_yaml_1_0

node_types:

##################################################################################################
# OpenStack authorization form
##################################################################################################

  tosca.nodes.openstack.authorization:
    derived_from: tosca.nodes.Root
    properties:
      username:
        type: string
        required: true
      password:
        type: string
        required: true
      project_name:
        type: string
        required: true
      auth_url:
        type: string
        required: true
      region_name:
        type: string
        required: false
      user_domain_name:
        type: string
        required: false
      project_domain_name:
        type: string
        required: false
    attributes:
      auth_properties:
        type: map
      auth_token:
        type: string
    capabilities:
      attachable:
        type: tosca.capabilities.openstack.auth.attachable
    interfaces:
      Standard:
        type: tosca.interfaces.node.lifecycle.Standard
        create:
          implementation: openstack_plugin.tasks.authorization:authorize
          inputs:
            type: map

##################################################################################################
# OpenStack SSH key
##################################################################################################

  tosca.nodes.openstack.ssh_keypair:
    derived_from: tosca.nodes.Root
    properties:
      use_connection_pool:
        type: boolean
        default: false
      compute_api_version:
        type: string
        default: '2'
        constraints:
          - valid_values: ['2']
      use_existing:
        type: boolean
        default: false
        constraints:
          - valid_values: [true, false]
      name:
        type: string
        required: true
      public_key:
        type: string
        required: False
    attributes:
      id:
        type: string
      name:
        type: string
      public_key:
        type: string
      private_key_content:
        type: string
    interfaces:
      Standard:
        type: tosca.interfaces.node.lifecycle.Standard
        create:
          implementation: openstack_plugin.tasks.ssh:create
        delete:
          implementation: openstack_plugin.tasks.ssh:delete

##################################################################################################
# OpenStack compute instance
##################################################################################################

  tosca.nodes.openstack.compute:
    derived_from: tosca.nodes.Compute
    properties:
      use_connection_pool:
        type: boolean
        default: false
      compute_api_version:
        type: string
        default: '2'
        constraints:
          - valid_values: ['2']
      compute_name:
        type: string
        required: false
        description: >
           An identifier that represents an existing Compte instance in the
           underlying cloud infrastructure or can be used as the name of the
           newly created compute. If compute_name is provided
           (with exception of compute_id), then an
           existing compute instance will be used. If compute_name is provided
           alongside with more properties then a new compute with this name will
           be created.
      compute_id:
        type: string
        required: false
        description: >
           An identifier that represents an existing Compute instance in the
           underlying cloud infrastructure. This property is mutually exclusive
           with all other properties except compute_name. This can be used alone
           or together with compute_name to identify an existing network.
      availability_zone:
        type: string
        required: false
      config_drive:
        type: boolean
        default: true
        required: false
    capabilities:
        host:
           type: tosca.capabilities.openstack.flavor
        binding:
           type: tosca.capabilities.network.Bindable
        os:
           type: tosca.capabilities.OperatingSystem
        scalable:
           type: tosca.capabilities.Scalable
    attributes:
      id:
        type: string
      status:
        type: string
      networks:
        type: list
      ports:
        type: map
        entry_schema:
          type: tosca.datatypes.network.PortInfo
    artifacts:
      image_ref:
        type: tosca.artifacts.openstack.image
      userdata:
        type: tosca.artifacts.openstack.user_data
    interfaces:
      Standard:
        type: tosca.interfaces.node.lifecycle.Standard
        create:
          implementation: openstack_plugin.tasks.compute:create
          inputs:
            task_retries: 30
            task_retry_interval: 10
        start:
          implementation: openstack_plugin.tasks.compute:start
          inputs:
            task_retries: 30
            task_retry_interval: 10
        stop:
          implementation: openstack_plugin.tasks.compute:stop
          inputs:
            task_retries: 30
            task_retry_interval: 10
        delete:
          implementation: openstack_plugin.tasks.compute:delete
          inputs:
            task_retries: 30
            task_retry_interval: 10


##################################################################################################
# OpenStack network
##################################################################################################

  tosca.nodes.openstack.network:
    derived_from: tosca.nodes.network.Network
    description: The TOSCA OpenStack Network node type
    properties:
      is_external:
        type: boolean
        required: false
        default: false
      network_name:
        type: string
        required: false
        description: >
           An identifier that represents an existing Network instance in the
           underlying cloud infrastructure or can be used as the name of the
           newly created network. If network_name is provided and no other
           properties are provided (with exception of network_id), then an
           existing network instance will be used. If network_name is provided
           alongside with more properties then a new network with this name will
           be created.
      network_id:
        type: string
        required: false
        description: >
           An identifier that represents an existing Network instance in the
           underlying cloud infrastructure. This property is mutually exclusive
           with all other properties except network_name. This can be used alone
           or together with network_name to identify an existing network.
    capabilities:
      link:
        type: tosca.capabilities.network.Linkable
    attributes:
      network_id:
        type: string
      network_name:
        type: string
      subnets:
        type: list
    interfaces:
      Standard:
        type: tosca.interfaces.node.lifecycle.Standard
        create:
          implementation: openstack_plugin.tasks.net:network_create
        start:
          implementation: openstack_plugin.tasks.net:network_start
        delete:
          implementation: openstack_plugin.tasks.net:network_delete
          inputs:
            task_retries: 10
            task_retry_interval: 10

##################################################################################################
# OpenStack subnet
##################################################################################################

  tosca.nodes.openstack.network.subnet:
    derived_from: tosca.nodes.network.Network
    description: The TOSCA OpenStack Network subnet node type
    properties:
      use_existing:
        type: boolean
        required: false
        default: false
      ip_version:
        type: integer
        required: false
        default: 4
        constraints:
          - valid_values: [ 4, 6 ]
        description: >
          The IP version of the requested network. Valid values are 4 for ipv4
          or 6 for ipv6.
      cidr:
        type: string
        required: false
        description: >
          The cidr block of the requested network.
      start_ip:
        type: string
        required: false
        description: >
           The IP address to be used as the start of a pool of addresses within
           the full IP range derived from the cidr block.
      end_ip:
        type: string
        required: false
        description: >
            The IP address to be used as the end of a pool of addresses within
            the full IP range derived from the cidr block.
      gateway_ip:
        type: string
        required: false
        description: >
           The gateway IP address.
      network_name:
        type: string
        required: false
        description: >
           An identifier that represents an existing Network instance in the
           underlying cloud infrastructure or can be used as the name of the
           newly created network. If network_name is provided and no other
           properties are provided (with exception of network_id), then an
           existing network instance will be used. If network_name is provided
           alongside with more properties then a new network with this name will
           be created.
      network_id:
        type: string
        required: false
        description: >
           An identifier that represents an existing Network instance in the
           underlying cloud infrastructure. This property is mutually exclusive
           with all other properties except network_name. This can be used alone
           or together with network_name to identify an existing network.
      segmentation_id:
        type: string
        required: false
        description: >
           A segmentation identifier in the underlying cloud infrastructure.
           E.g. VLAN ID, GRE tunnel ID, etc..
      network_type:
        type: string
        required: false
        description: >
           It specifies the nature of the physical network in the underlying
           cloud infrastructure. Examples are flat, vlan, gre or vxlan.
           For flat and vlan types, physical_network should be provided too.
      physical_network:
        type: string
        required: false
        description: >
           It identifies the physical network on top of which the network is
           implemented, e.g. physnet1. This property is required if network_type
           is flat or vlan.
      dhcp_enabled:
        type: boolean
        required: false
        default: true
        description: >
          Indicates should DHCP service be enabled on the network or not.
      dns_nameservers:
        type: list
        required: false
        default: ['8.8.8.8', '8.8.4.4']
        description: DNS nameserver
    attributes:
      link_id:
        type: string
      network_id:
        type: string
      network_name:
        type: string
    capabilities:
      link:
        type: tosca.capabilities.network.Linkable
    requirements:
      - link:
          capability: tosca.capabilities.network.Linkable
          node: tosca.nodes.openstack.network
          relationship: tosca.relationships.openstack.network.linked
    interfaces:
      Standard:
        type: tosca.interfaces.node.lifecycle.Standard
        create:
          implementation: openstack_plugin.tasks.subnet:subnet_create
          inputs:
            task_retries: 10
            task_retry_interval: 10
        delete:
          implementation: openstack_plugin.tasks.subnet:subnet_delete
          inputs:
            task_retries: 10
            task_retry_interval: 10

##################################################################################################
# OpenStack port
##################################################################################################

  tosca.nodes.openstack.network.port:
    derived_from: tosca.nodes.network.Port
    description: OpenStack network subnet port type
    properties:
      port_name:
        type: string
        required: false
        description: >
           An identifier that represents an existing Port instance in the
           underlying cloud infrastructure or can be used as the name of the
           newly created port. If port_name is provided and no other
           properties are provided (with exception of port_id), then an
           existing port instance will be used. If port_name is provided
           alongside with more properties then a new port with this name will
           be created.
      port_id:
        type: string
        required: false
        description: >
           An identifier that represents an existing Port instance in the
           underlying cloud infrastructure. This property is mutually exclusive
           with all other properties except port_name. This can be used alone
           or together with port_name to identify an existing network.
      ip_address:
        type: string
        required: false
        description: Allow the user to set a static IP.
      order:
        type: integer
        required: false
        default: 0
        constraints:
          - greater_or_equal: 0
        description: The order of the NIC on the compute instance (e.g. eth2).
      is_default:
        type: boolean
        required: false
        default: false
        description: >
          If is_default=true this port will be used for the default gateway
          route. Only one port that is associated to single compute node can
          set as is_default=true.
      ip_range_start:
        type: string
        required: false
        description: >
          Defines the starting IP of a range to be allocated for the compute
          instances that are associated with this Port.
      ip_range_end:
        type: string
        required: false
        description: >
          Defines the ending IP of a range to be allocated for the compute
          instances that are associated with this Port.
    attributes:
      ip_address:
        type: string
    requirements:
      - binding:
          description: >
            Binding requirement expresses the relationship between Port and
            Compute nodes. Effectively it indicates that the Port will be
            attached to specific Compute node instance
          capability: tosca.capabilities.network.Bindable
          relationship: tosca.relationships.network.BindsTo
          node: tosca.nodes.openstack.compute
      - link:
          description: >
            Link requirement expresses the relationship between Port and Network
            nodes. It indicates which network this port will connect to.
          capability: tosca.capabilities.network.Linkable
          relationship: tosca.relationships.openstack.network.linked
          node: tosca.nodes.openstack.network.subnet
    interfaces:
      Standard:
        type: tosca.interfaces.node.lifecycle.Standard
        create:
          implementation: openstack_plugin.tasks.port:port_create
        start:
          implementation: openstack_plugin.tasks.port:port_start
        stop:
          implementation: openstack_plugin.tasks.port:port_stop
        delete:
          implementation: openstack_plugin.tasks.port:port_delete
          inputs:
            task_retries: 10
            task_retry_interval: 10

##################################################################################################
# OpenStack router
##################################################################################################

  tosca.nodes.openstack.network.router:
    derived_from: tosca.nodes.Root
    description: OpenStack network router
    properties:
      router_name:
        type: string
        required: false
        description: >
           An identifier that represents an existing router instance in the
           underlying cloud infrastructure or can be used as the name of the
           newly created port. If port_name is provided and no other
           properties are provided (with exception of router_id), then an
           existing port instance will be used. If router_name is provided
           alongside with more properties then a new port with this name will
           be created.
      router_id:
        type: string
        required: false
        description: >
           An identifier that represents an existing router instance in the
           underlying cloud infrastructure. This property is mutually exclusive
           with all other properties except router_name. This can be used alone
           or together with router_name to identify an existing network.
    capabilities:
      link:
        type: tosca.capabilities.network.Linkable
    attributes:
      router_id:
        type: string
    requirements:
      - link:
          description: >
            Binding requirement expresses the relationship between Router and
            External network. Effectively it indicates that the Router will be
            attached to specific Router using external gateway info
          capability: tosca.capabilities.network.Linkable
          relationship: tosca.relationships.openstack.network.router.bind
          node: tosca.nodes.openstack.network
    interfaces:
      Standard:
        type: tosca.interfaces.node.lifecycle.Standard
        create:
          implementation: openstack_plugin.tasks.router:router_create
        start:
          implementation: openstack_plugin.tasks.router:router_start
        delete:
          implementation: openstack_plugin.tasks.router:router_delete
          inputs:
            task_retries: 10
            task_retry_interval: 10

##################################################################################################
# OpenStack floating IP
##################################################################################################

  tosca.nodes.openstack.network.floating_ip:
    derived_from: tosca.nodes.Root
    properties:
      floating_ip_id:
        type: string
        required: false
        desceription: Specify floating IP ID to use existing instead of allocating new
    attributes:
      fixed_ip_address:
        type: string
      floating_ip_address:
        type: string
      floating_ip_id:
        type: string
      port_id:
        type: string
      router_id:
        type: string
    capabilities:
        binding:
           type: tosca.capabilities.network.Bindable
    interfaces:
      Standard:
        type: tosca.interfaces.node.lifecycle.Standard
        create:
          implementation: openstack_plugin.tasks.floating_ip:floatingip_create
        delete:
          implementation: openstack_plugin.tasks.floating_ip:floatingip_delete
          inputs:
            task_retries: 10
            task_retry_interval: 10
    requirements:
      - link:
          capability: tosca.capabilities.network.Linkable
          node: tosca.nodes.openstack.network
          relationship: tosca.relationships.openstack.network.floating_ip
      - binding:
          capability: tosca.capabilities.Node
          node: tosca.nodes.openstack.network.port
          relationship: tosca.relationships.openstack.network.port.floating_ip

##################################################################################################
# OpenStack Security group and Rules
##################################################################################################

  tosca.nodes.openstack.network.port.security_group:
    derived_from: tosca.nodes.Root
    properties:
      security_group_name:
        type: string
        required: false
      security_group_id:
        type: string
        required: false
      description:
        type: string
        required: false
    attributes:
      security_group_id:
        type: string
    interfaces:
      Standard:
        type: tosca.interfaces.node.lifecycle.Standard
        create:
          implementation: openstack_plugin.tasks.security_group:security_group_create
        delete:
          implementation: openstack_plugin.tasks.security_group:security_group_delete

  tosca.nodes.openstack.network.port.security_group.rule:
    derived_from: tosca.nodes.Root
    properties:
      direction:
        type: string
        required: true
        constraints:
          - valid_values: ['ingress', 'egress']
      ethertype:
        type: string
        constraints:
          - valid_values: ['IPv4', 'IPv6']
        required: true
      port_range_min:
        type: integer
        required: true
      port_range_max:
        type: integer
        required: true
      protocol:
        type: string
        constraints:
          - valid_values: ['tcp', 'icmp', 'udp']
        required: true
      remote_ip_prefix:
        type: string
        required: true
    interfaces:
      Standard:
        type: tosca.interfaces.node.lifecycle.Standard
        create:
          implementation: aiorchestra.core.noop:noop
        delete:
          implementation: aiorchestra.core.noop:noop

##################################################################################################
# OpenStack compute file injection
##################################################################################################

  tosca.nodes.openstack.compute.file:
    derived_from: tosca.nodes.Root
    properties:
      source:
        type: string
        required: true
      destination:
        type: string
        required: true
    interfaces:
      Standard:
        type: tosca.interfaces.node.lifecycle.Standard
        create:
          implementation: openstack_plugin.tasks.compute:setup_injection

##################################################################################################
# OpenStack artifacts
##################################################################################################

  tosca.artifacts.openstack.image:
    derived_from: tosca.artifacts.Deployment.Image
    description: Glance image artifact
    image:
      type: string

  tosca.artifacts.openstack.compute.injection_file:
    derived_from: tosca.artifacts.Deployment.Image
    description: Glance image artifact
    source:
      type: string
    destination:
      type: string

  tosca.artifacts.openstack.user_data:
    derived_from: tosca.artifacts.Implementation.Bash
    description: Nova compute boot user data
    file:
      type: string

##################################################################################################
# OpenStack relationships
##################################################################################################

  tosca.relationships.openstack.inject_auth:
    derived_from: tosca.relationships.Root
    interfaces:
      Configure:
        type: tosca.interfaces.relationship.Configure
        link:
          implementation: openstack_plugin.tasks.authorization:inject
          inputs:
            type: map
        unlink:
          implementation: openstack_plugin.tasks.authorization:eject
          inputs:
            type: map

  tosca.relationships.openstack.ssh_keypair_provider:
    derived_from: tosca.relationships.Root
    interfaces:
      Configure:
        type: tosca.interfaces.relationship.Configure
        link:
          implementation: openstack_plugin.tasks.ssh:link
          inputs:
            type: map
        unlink:
          implementation: openstack_plugin.tasks.ssh:unlink
          inputs:
            type: map

  tosca.relationships.openstack.compute.injected_with:
    derived_from: tosca.relationships.Root
    interfaces:
      Configure:
        type: tosca.interfaces.relationship.Configure
        link:
          implementation: openstack_plugin.tasks.compute:inject_file
          inputs:
            type: map
        unlink:
          implementation: openstack_plugin.tasks.compute:eject_file
          inputs:
            type: map

  tosca.relationships.openstack.network.linked:
    derived_from: tosca.relationships.Root
    valid_target_types: [tosca.nodes.openstack.network, tosca.nodes.openstack.network.subnet]
    interfaces:
      Configure:
        type: tosca.interfaces.relationship.Configure
        link:
          implementation: openstack_plugin.tasks.net:link
          inputs:
            type: map
        unlink:
          implementation: openstack_plugin.tasks.net:unlink
          inputs:
            type: map

  tosca.relationships.openstack.compute.port.bind:
    derived_from: tosca.relationships.Root
    description: >
      Effectively binds network port to compute.
      This relationship should be used with compute node in its requirements.
    interfaces:
      Configure:
        type: tosca.interfaces.relationship.Configure
        link:
          implementation: openstack_plugin.tasks.port:add_port
          inputs:
            type: map
        unlink:
          implementation: openstack_plugin.tasks.port:remove_port
          inputs:
            type: map

  tosca.relationships.openstack.network.port.bind:
    derived_from: tosca.relationships.Root
    description: >
      Effectively binds compute to network port.
      This relationship should be used with port node in its requirements.
    interfaces:
      Configure:
        type: tosca.interfaces.relationship.Configure
        link:
          implementation: openstack_plugin.tasks.port:bind_compute_to_port
          inputs:
            type: map
        unlink:
          implementation: openstack_plugin.tasks.port:unbind_compute_from_port
          inputs:
            type: map

  tosca.relationships.openstack.network.router.bind:
    derived_from: tosca.relationships.Root
    valid_target_types: [tosca.nodes.openstack.network]
    interfaces:
      Configure:
        type: tosca.interfaces.relationship.Configure
        link:
          implementation: openstack_plugin.tasks.router:link_router_to_external_network
          inputs:
            type: map
        unlink:
          implementation: openstack_plugin.tasks.router:unlink_router_from_external_network
          inputs:
            type: map

  tosca.relationships.openstack.network.router.link:
    derived_from: tosca.relationships.Root
    valid_target_types: [tosca.nodes.openstack.network.subnet]
    interfaces:
      Configure:
        type: tosca.interfaces.relationship.Configure
        link:
          implementation: openstack_plugin.tasks.subnet:link_subnet_to_router
          inputs:
            type: map
        unlink:
          implementation: openstack_plugin.tasks.subnet:unlink_subnet_to_router
          inputs:
            type: map

  tosca.relationships.openstack.network.floating_ip.provider:
    derived_from: tosca.relationships.Root
    interfaces:
      Configure:
        type: tosca.interfaces.relationship.Configure
        link:
          implementation: openstack_plugin.tasks.floating_ip:inject_floating_ip_attributes
        unlink:
          implementation: openstack_plugin.tasks.floating_ip:eject_floating_ip_attributes

  tosca.relationships.openstack.network.floating_ip:
    derived_from: tosca.relationships.Root
    interfaces:
      Configure:
        type: tosca.interfaces.relationship.Configure
        link:
          implementation: openstack_plugin.tasks.floating_ip:link_floatingip_to_network
          inputs:
            type: map
        unlink:
          implementation: openstack_plugin.tasks.floating_ip:unlink_floatingip_from_network
          inputs:
            type: map

  tosca.relationships.openstack.network.port.floating_ip:
    derived_from: tosca.relationships.Root
    valid_target_types: [tosca.nodes.openstack.network.port]
    interfaces:
      Configure:
        type: tosca.interfaces.relationship.Configure
        link:
          implementation: openstack_plugin.tasks.floating_ip:link_floatingip_to_port
          inputs:
            type: map
        unlink:
          implementation: openstack_plugin.tasks.floating_ip:unlink_floatingip_from_port
          inputs:
            type: map

  tosca.relationships.openstack.network.port.security_group.rule:
    derived_from: tosca.relationships.Root
    valid_target_types: [tosca.nodes.openstack.network.port.security_group.rule]
    interfaces:
      Configure:
        type: tosca.interfaces.relationship.Configure
        link:
          implementation: openstack_plugin.tasks.security_group:connect_security_groups_rule
        unlink:
          implementation: openstack_plugin.tasks.security_group:disconnect_security_groups_rule

  tosca.relationships.openstack.network.port.security_group.attached:
    derived_from: tosca.relationships.Root
    interfaces:
      Configure:
        type: tosca.interfaces.relationship.Configure
        link:
          implementation: openstack_plugin.tasks.security_group:link_security_groups_to_port
        unlink:
          implementation: openstack_plugin.tasks.security_group:unlink_security_groups_from_port

##################################################################################################
# OpenStack capabilities
##################################################################################################

  tosca.capabilities.openstack.network.port.bindable:
    derived_from: tosca.capabilities.Node

  tosca.capabilities.openstack.network.port.security_group.attachable:
    derived_from: tosca.capabilities.Node

  tosca.capabilities.openstack.network.port.security_group.rule.attachable:
    derived_from: tosca.capabilities.Node

  tosca.capabilities.openstack.auth.attachable:
    derived_from: tosca.capabilities.Node

  tosca.capabilities.openstack.compute.ssh.attachable:
    derived_from: tosca.capabilities.Node

  tosca.capabilities.openstack.flavor:
    derived_from: tosca.capabilities.Container
    properties:
      flavor:
        type: string
        required: true
      num_cpus:
        required: false
        type: integer
        constraints:
          - greater_or_equal: 1
      cpu_frequency:
        required: false
        type: scalar-unit.frequency
        constraints:
          - greater_or_equal: 0.1 GHz
      disk_size:
        required: false
        type: scalar-unit.size
        constraints:
          - greater_or_equal: 0 MB
      mem_size:
        required: false
        type: scalar-unit.size
        constraints:
          - greater_or_equal: 0 MB

##################################################################################################
# OpenStack datatypes
##################################################################################################

  tosca.datatypes.network.openstack.PortInfo:
    derived_from: tosca.datatypes.network.PortInfo
    properties:
      port_name:
        type: string
      port_id:
        type: string
      network_id:
        type: string
      mac_address:
        type: string
      addresses:
        type: list
        entry_schema:
          type: string
