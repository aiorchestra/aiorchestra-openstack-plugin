tosca_definitions_version: tosca_simple_yaml_1_0

description: floating IP


#####################################################################
# Imports
#####################################################################

imports:

  - ../types.yaml

topology_template:
#####################################################################
# Inputs
#####################################################################

  inputs:

    keystone_username:
      type: string

    keystone_password:
      type: string

    keystone_project_name:
      type: string

    keystone_url:
      type: string

    openstack_region:
      type: string

    network_name:
      type: string

    subnet_ip_version:
      type: integer
      default: 4

    subnet_name:
      type: string

    subnet_cidr:
      type: string

    subnet_pool_start_ip:
      type: string

    subnet_pool_end_ip:
      type: string

    subnet_gateway_ip:
      type: string

    subnet_dns_nameserver:
      type: list

    network_subnet_port_name:
      type: string

    external_network_id:
      type: string

    router_name:
      type: string

#####################################################################
# Node templates
#####################################################################

  node_templates:

    aiorchestra.openstack.authorization:
      type: tosca.nodes.openstack.authorization
      properties:
        username: { get_input: keystone_username }
        password: { get_input: keystone_password }
        project_name:  { get_input: keystone_project_name }
        auth_url:  { get_input: keystone_url }
        region_name:  { get_input: openstack_region }

    aiorchestra.openstack.network.external:
      type: tosca.nodes.openstack.network
      properties:
        is_external: true
        network_id: { get_input: external_network_id }
      requirements:
        - auth:
            capability: tosca.capabilities.openstack.auth.attachable
            node: aiorchestra.openstack.authorization
            relationship: tosca.relationships.openstack.inject_auth

    aiorchestra.openstack.network.router:
      type: tosca.nodes.openstack.network.router
      properties:
        router_name: { get_input: router_name }
      requirements:
        - auth:
            capability: tosca.capabilities.openstack.auth.attachable
            node: aiorchestra.openstack.authorization
            relationship: tosca.relationships.openstack.inject_auth
        - link: aiorchestra.openstack.network.external

    aiorchestra.openstack.network:
      type: tosca.nodes.openstack.network
      properties:
        network_name: { get_input: network_name }
      requirements:
        - auth:
            capability: tosca.capabilities.openstack.auth.attachable
            node: aiorchestra.openstack.authorization
            relationship: tosca.relationships.openstack.inject_auth

    aiorchestra.openstack.network.subnet:
      type: tosca.nodes.openstack.network.subnet
      properties:
        ip_version: { get_input: subnet_ip_version }
        cidr: { get_input: subnet_cidr }
        start_ip: { get_input: subnet_pool_start_ip }
        end_ip: { get_input: subnet_pool_end_ip }
        gateway_ip: { get_input: subnet_gateway_ip }
        network_name: { get_input: subnet_name }
        dns_nameservers: { get_input: subnet_dns_nameserver }
      requirements:
        - auth:
            capability: tosca.capabilities.openstack.auth.attachable
            node: aiorchestra.openstack.authorization
            relationship: tosca.relationships.openstack.inject_auth
        - link: aiorchestra.openstack.network
        - router_link:
            capability: tosca.capabilities.network.Linkable
            node: aiorchestra.openstack.network.router
            relationship: tosca.relationships.openstack.network.router.link

    aiorchestra.openstack.network.port:
      type: tosca.nodes.openstack.network.port
      properties:
        port_name: { get_input: network_subnet_port_name }
      requirements:
        - auth:
            capability: tosca.capabilities.openstack.auth.attachable
            node: aiorchestra.openstack.authorization
            relationship: tosca.relationships.openstack.inject_auth
        - link: aiorchestra.openstack.network.subnet

    aiorchestra.openstack.network.floating_ip:
      type: tosca.nodes.openstack.network.floating_ip
      requirements:
        - auth:
            capability: tosca.capabilities.openstack.auth.attachable
            node: aiorchestra.openstack.authorization
            relationship: tosca.relationships.openstack.inject_auth
        - link: aiorchestra.openstack.network.external
        - binding: aiorchestra.openstack.network.port


  outputs:
    network_id:
      value: { get_attribute: [ aiorchestra.openstack.network, network_id ] }
    subnet_id:
      value: { get_attribute: [ aiorchestra.openstack.network.subnet, network_id ] }
    port_address:
      value: { get_attribute: [ aiorchestra.openstack.network.port, ip_address ] }
    port_floating_ip_address:
      value: { get_attribute: [ aiorchestra.openstack.network.floating_ip, floating_ip_id ] }
